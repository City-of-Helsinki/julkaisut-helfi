diff --git a/modules/taxonomy/src/Form/OverviewTerms.php b/modules/taxonomy/src/Form/OverviewTerms.php
index 0b918bf..beca477 100644
--- a/modules/taxonomy/src/Form/OverviewTerms.php
+++ b/modules/taxonomy/src/Form/OverviewTerms.php
@@ -9,6 +9,7 @@ use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Pager\PagerManagerInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Url;
@@ -71,6 +72,11 @@ class OverviewTerms extends FormBase {
    */
   protected $pagerManager;
 
+  /**
+   * @var \Drupal\Core\Language\LanguageManagerInterface
+   */
+  protected $languageManager;
+
   /**
    * Constructs an OverviewTerms object.
    *
@@ -85,7 +91,7 @@ class OverviewTerms extends FormBase {
    * @param \Drupal\Core\Pager\PagerManagerInterface $pager_manager
    *   The pager manager.
    */
-  public function __construct(ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, RendererInterface $renderer, EntityRepositoryInterface $entity_repository, PagerManagerInterface $pager_manager) {
+  public function __construct(ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, RendererInterface $renderer, EntityRepositoryInterface $entity_repository, PagerManagerInterface $pager_manager, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $module_handler;
     $this->entityTypeManager = $entity_type_manager;
     $this->storageController = $entity_type_manager->getStorage('taxonomy_term');
@@ -93,6 +99,7 @@ class OverviewTerms extends FormBase {
     $this->renderer = $renderer;
     $this->entityRepository = $entity_repository;
     $this->pagerManager = $pager_manager;
+    $this->languageManager = $languageManager;
   }
 
   /**
@@ -104,7 +111,8 @@ class OverviewTerms extends FormBase {
       $container->get('entity_type.manager'),
       $container->get('renderer'),
       $container->get('entity.repository'),
-      $container->get('pager.manager')
+      $container->get('pager.manager'),
+      $container->get('language_manager')
     );
   }
 
@@ -134,6 +142,7 @@ class OverviewTerms extends FormBase {
   public function buildForm(array $form, FormStateInterface $form_state, VocabularyInterface $taxonomy_vocabulary = NULL) {
     $form_state->set(['taxonomy', 'vocabulary'], $taxonomy_vocabulary);
     $vocabulary_hierarchy = $this->storageController->getVocabularyHierarchyType($taxonomy_vocabulary->id());
+
     $parent_fields = FALSE;
 
     $page = $this->pagerManager->findPage();
@@ -160,12 +169,18 @@ class OverviewTerms extends FormBase {
     $delta = 0;
     $term_deltas = [];
     $tree = $this->storageController->loadTree($taxonomy_vocabulary->id(), 0, NULL, TRUE);
+
     $tree_index = 0;
     do {
       // In case this tree is completely empty.
       if (empty($tree[$tree_index])) {
         break;
       }
+
+      if ($tree[$tree_index]->language()->getId() != $this->languageManager->getCurrentLanguage()->getId()) {
+        continue;
+      }
+
       $delta++;
       // Count entries before the current page.
       if ($page && ($page * $page_increment) > $before_entries && !isset($back_step)) {
