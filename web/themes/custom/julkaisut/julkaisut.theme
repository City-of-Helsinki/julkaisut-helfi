<?php

/**
 * @file
 * Add your custom theme override functions here.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Render\Markup;

/**
 * Implements template_preprocess_field__body().
 */
function julkaisut_preprocess_node(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $variables['node'];
  $variables['url_absolute'] = $node->toUrl('canonical', [
    'language' => $node->language(),
    'absolute' => true,
  ]);

  $variables['date'] = \Drupal::service('date.formatter')->format($node->getCreatedTime(), 'published_date');

  $variables['translation_links'] = [
    '#theme' => 'item_list',
    '#list_type' => 'ul',
    '#wrapper_attributes' => [
      'class' => ['translation-links'],
    ],
    '#items' => [],
  ];
  foreach ($node->getTranslationLanguages(FALSE) as $langcode => $language) {
    /** @var Drupal\node\Entity\Node $translation */
    $translation = $node->getTranslation($langcode);
    $label = [
      'fi' => 'Suomeksi',
      'sv' => 'PÃ¥ svenska',
      'en' => 'In English',
    ];
    $variables['translation_links']['#items'][] = [
      '#type' => 'link',
      '#title' => Markup::create($label[$langcode] ?? t('In @language', [
        '@language' => $language->getName(),
      ], ['langcode' => $langcode])),
      '#url' => $translation->toUrl('canonical', [
        'language' => $translation->language(),
      ]),
    ];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function julkaisut_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    // Add a separate template per depth so we can target the book outline.
    if ($node->bundle() === 'book') {
      $suggestions[] = 'node__book__depth_' . $node->book['depth'];
    }

    // Set a higher priority for node--teaser suggestion
    if (in_array('node__teaser', $suggestions)) {
      $suggestions[] = 'node__teaser';
    }
  }
}

/**
 * Implements template_preprocess_book_navigation().
 */
function julkaisut_preprocess_book_navigation(&$variables) {
  // Do not show the parent URL
  unset($variables['parent_url']);

  // On the root page, do not show the navigation, only the tree.
  $is_root = $variables['book_link']['depth'] === '1';
  if ($is_root) {
    $variables['has_links'] = false;
  } else {
    $variables['tree'] = null;
  }
}

/**
 * Implements template_preprocess_field().
 *
 * Add an `is-root-container` to gutenberg fields.
 */
function julkaisut_preprocess_field(&$variables) {
  switch ($variables['field_name']) {
    case 'body':
    case 'description':
      if (!$variables['multiple']) {
        $variables['attributes']['class'][] = 'is-root-container';
      }

      foreach ($variables['items'] as &$item) {
        if ($item['content']['#format'] === 'gutenberg') {
          $item['attributes']->addClass('is-root-container');
        }
      }
      break;
  }
}

/**
 * Implements template_preprocess_media__document__download().
 */
function julkaisut_preprocess_media__document__download(&$variables) {
  /** @var \Drupal\media\Entity\Media $entity */
  $media = $variables['elements']['#media'] ?? null;
  if ($media) {
    /** @var Drupal\file\Entity\File $entity */
    $file = $media->field_media_file->entity;
    $variables['file_url'] = file_create_url($file->uri->value);
  }
}

/**
 * Implements template_preprocess_page().
 */
function julkaisut_preprocess_page(&$variables) {
  $variables['site_name'] = Drupal::config('system.site')->get('name');
  $langcode = Drupal::service('language_manager')->getCurrentLanguage()->getId();
  $logo_filename = ($langcode === 'sv') ? 'helsinki-sv.svg' : 'helsinki-fi.svg';

  // Attach the logo
  $variables['logo'] = [
    '#theme' => 'image',
    '#uri' => file_create_url($variables['directory'] . "/dist/images/logo/$logo_filename"),
    '#attributes' => [
      'alt' => strip_tags($variables['site_name']),
      'title' => strip_tags($variables['site_name']),
      'style' => 'max-width: 200px;',
      'class' => ['logo'],
    ],
  ];

  /** @var Drupal\node\Entity\Node|null $node */
  $node = $variables['node'] ?? null;

  // Allow nodes to change the content width to 12/12
  if ($node && $node->field_wide_contentwidth && $node->field_wide_contentwidth->getString() === '1') {
    $variables['attributes']['style'] = '--content-width: var(--alignwide-width)';
  }
}

/**
 * Implements template_preprocess_taxonomy_term().
 */
function julkaisut_preprocess_taxonomy_term(&$variables) {
  $term = $variables['term'];

  // Expose a `date` variable much like on nodes
  if ($term->field_published && !$term->field_published->isEmpty()) {
    $variables['date'] = \Drupal::service('date.formatter')->format(
      strtotime($term->field_published->value),
      'published_date'
    );
  }
}

/**
 * Implements template_preprocess_block().
 */
function julkaisut_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);

    switch ($block->getRegion()) {
      case 'content':
        $variables['attributes']['class'][] = 'is-container';
        break;
    }
  }
}

/**
 * Implements template_preprocess_page_title().
 */
function julkaisut_preprocess_page_title(&$variables) {
  /** @var Drupal\node\Entity\Node|null $node */
  $node = \Drupal::routeMatch()->getParameter('node') ?? null;

  // Enable copy to clipboard on book pages.
  if ($node && in_array($node->getType(), ['book'])) {
    $variables['copy_to_clipboard'] = $node->toUrl('canonical', [
      'language' => $node->language(),
      'absolute' => true,
    ]);
  }
}
