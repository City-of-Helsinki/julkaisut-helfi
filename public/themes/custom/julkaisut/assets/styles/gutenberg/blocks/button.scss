@use "gutenberg/global" as gutenberg;

/**
 * Button
 */

 :root {
  --button-color: var(--color-white);
  --button-background: var(--color-black);
  --button-background-hover: var(--color-primary);
  --button-border-width: 0px;
 }

 .wp-block-button {
  color: var(--button-color);;
  background-color: var(--button-background);
  font-weight: 500;

  &:visited {
    color: var(--button-color);
  }

  &:hover,
  &:focus {
    background-color: var(--button-background-hover);
    color: var(--button-color);
  }

  &.is-style-outline {
    --button-border-width: 3px;
  }

  &.is-style-small,
  &.is-style-outline {
    --button-color: var(--button-background);

    background-color: transparent !important;

    &:hover,
    &:focus {
      &,
      & .wp-block-button__link {
        text-decoration: underline;
      }
    }
  }

  & &__link:not(.has-background) {
    background-color: transparent;
    color: inherit;
  }

  // Add a generic hover state without having to find color matches
  // This is inverted for light colors
  &__link.has-background:hover {
    filter: brightness(1.25);
  }


  &__link {
    border-radius: 0;
    padding: calc(21px - var(--button-border-width) * 2) calc(32px - var(--button-border-width) * 2);
    font-size: var(--fontsize-body-m);
    line-height: var(--lineheight-s);
    box-sizing: border-box;
    border: solid var(--button-border-width) currentColor;

    @each $name in gutenberg.$palette-colors-light {
      &.has-#{$name}-background-color {
        color: var(--color-black-90);

        &:hover {
          filter: brightness(0.85);
        }
      }
    }
  }

  &.is-style-small {
    --button-border-width: 2px;

    &.wp-block-button__link,
    .wp-block-button__link {
      padding: 10px 16px 9px;
      font-size: 14px;
      line-height: 1;
    }
  }
}
